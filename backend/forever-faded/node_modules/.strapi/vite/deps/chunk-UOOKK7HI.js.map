{
  "version": 3,
  "sources": ["../../../@strapi/plugin-documentation/admin/src/constants.ts", "../../../@strapi/plugin-documentation/admin/src/pluginId.ts", "../../../@strapi/plugin-documentation/admin/src/utils/prefixPluginTranslations.ts", "../../../@strapi/plugin-documentation/admin/src/index.ts"],
  "sourcesContent": ["export const PERMISSIONS = {\n  // This permission regards the main component (App) and is used to tell\n  // If the plugin link should be displayed in the menu\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\n  // plugin directly in the browser\n  main: [\n    { action: 'plugin::documentation.read', subject: null },\n    { action: 'plugin::documentation.settings.regenerate', subject: null },\n    { action: 'plugin::documentation.settings.update', subject: null },\n  ],\n  open: [\n    { action: 'plugin::documentation.read', subject: null },\n    { action: 'plugin::documentation.settings.regenerate', subject: null },\n  ],\n  regenerate: [{ action: 'plugin::documentation.settings.regenerate', subject: null }],\n  update: [{ action: 'plugin::documentation.settings.update', subject: null }],\n};\n", "export const pluginId = 'documentation';\n", "const prefixPluginTranslations = (trad: Record<string, string>, pluginId?: string) => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n\n  return Object.keys(trad).reduce(\n    (acc, current) => {\n      acc[`${pluginId}.${current}`] = trad[current];\n\n      return acc;\n    },\n    {} as Record<string, string>\n  );\n};\n\nexport { prefixPluginTranslations };\n", "import { Information } from '@strapi/icons';\n\nimport { PERMISSIONS } from './constants';\nimport { pluginId } from './pluginId';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  register(app: any) {\n    app.addMenuLink({\n      to: `plugins/${pluginId}`,\n      icon: Information,\n      intlLabel: {\n        id: `${pluginId}.plugin.name`,\n        defaultMessage: 'Documentation',\n      },\n      permissions: PERMISSIONS.main,\n      Component: async () => {\n        const { App } = await import('./pages/App');\n        return App;\n      },\n      position: 9,\n    });\n\n    app.registerPlugin({\n      id: pluginId,\n      name: pluginId,\n    });\n  },\n  bootstrap(app: any) {\n    app.addSettingsLink('global', {\n      intlLabel: {\n        id: `${pluginId}.plugin.name`,\n        defaultMessage: 'Documentation',\n      },\n      id: 'documentation',\n      to: pluginId,\n      Component: async () => {\n        const { SettingsPage } = await import('./pages/Settings');\n        return SettingsPage;\n      },\n      permissions: PERMISSIONS.main,\n    });\n  },\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, pluginId),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],
  "mappings": ";;;;;IAAaA,cAAc;;;;;EAKzBC,MAAM;IACJ;MAAEC,QAAQ;MAA8BC,SAAS;IAAK;IACtD;MAAED,QAAQ;MAA6CC,SAAS;IAAK;IACrE;MAAED,QAAQ;MAAyCC,SAAS;IAAK;EAClE;EACDC,MAAM;IACJ;MAAEF,QAAQ;MAA8BC,SAAS;IAAK;IACtD;MAAED,QAAQ;MAA6CC,SAAS;IAAK;EACtE;EACDE,YAAY;IAAC;MAAEH,QAAQ;MAA6CC,SAAS;IAAK;EAAE;EACpFG,QAAQ;IAAC;MAAEJ,QAAQ;MAAyCC,SAAS;IAAK;EAAE;AAC9E;AChBO,IAAMI,WAAW;ACAxB,IAAMC,2BAA2B,CAACC,MAA8BF,cAAAA;AAK9D,SAAOG,OAAOC,KAAKF,IAAAA,EAAMG,OACvB,CAACC,KAAKC,YAAAA;AACJD,QAAI,GAAGN,SAAAA,IAAYO,OAAQ,EAAC,IAAIL,KAAKK,OAAQ;AAE7C,WAAOD;EACT,GACA,CAAA,CAAC;AAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,IAAA,QAAe;EACbE,SAASC,KAAQ;AACfA,QAAIC,YAAY;MACdC,IAAI,WAAWX,QAAAA;MACfY,MAAMC;MACNC,WAAW;QACTC,IAAI,GAAGf,QAAS;QAChBgB,gBAAgB;MAClB;MACAC,aAAaxB,YAAYC;MACzBwB,WAAW,YAAA;AACT,cAAM,EAAEC,IAAG,IAAK,MAAM,OAAO,4BAAA;AAC7B,eAAOA;MACT;MACAC,UAAU;IACZ,CAAA;AAEAX,QAAIY,eAAe;MACjBN,IAAIf;MACJsB,MAAMtB;IACR,CAAA;EACF;EACAuB,UAAUd,KAAQ;AAChBA,QAAIe,gBAAgB,UAAU;MAC5BV,WAAW;QACTC,IAAI,GAAGf,QAAS;QAChBgB,gBAAgB;MAClB;MACAD,IAAI;MACJJ,IAAIX;MACJkB,WAAW,YAAA;AACT,cAAM,EAAEO,aAAY,IAAK,MAAM,OAAO,iCAAA;AACtC,eAAOA;MACT;MACAR,aAAaxB,YAAYC;IAC3B,CAAA;EACF;EACA,MAAMgC,cAAc,EAAEC,QAAO,GAAyB;AACpD,UAAMC,gBAAgB,MAAMC,QAAQC,IAClCH,QAAQI,IAAI,CAACC,WAAAA;AACX,aAAO,kCAAO,kBAAkBA,MAAO,OAAM,EAC1CC,KAAK,CAAC,EAAEC,SAASC,KAAI,MAAE;AACtB,eAAO;UACLA,MAAMlC,yBAAyBkC,MAAMnC,QAAAA;UACrCgC;QACF;MACF,CAAA,EACCI,MAAM,MAAA;AACL,eAAO;UACLD,MAAM,CAAA;UACNH;QACF;MACF,CAAA;IACJ,CAAA,CAAA;AAGF,WAAOH,QAAQQ,QAAQT,aAAAA;EACzB;AACF;",
  "names": ["PERMISSIONS", "main", "action", "subject", "open", "regenerate", "update", "pluginId", "prefixPluginTranslations", "trad", "Object", "keys", "reduce", "acc", "current", "register", "app", "addMenuLink", "to", "icon", "Information", "intlLabel", "id", "defaultMessage", "permissions", "Component", "App", "position", "registerPlugin", "name", "bootstrap", "addSettingsLink", "SettingsPage", "registerTrads", "locales", "importedTrads", "Promise", "all", "map", "locale", "then", "default", "data", "catch", "resolve"]
}
