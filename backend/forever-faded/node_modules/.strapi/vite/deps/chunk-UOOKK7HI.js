import {
  ForwardRef$2x
} from "./chunk-ACQSOSRS.js";

// node_modules/@strapi/plugin-documentation/dist/admin/chunks/index-Bqh49AYj.mjs
var PERMISSIONS = {
  // This permission regards the main component (App) and is used to tell
  // If the plugin link should be displayed in the menu
  // And also if the plugin is accessible. This use case is found when a user types the url of the
  // plugin directly in the browser
  main: [
    {
      action: "plugin::documentation.read",
      subject: null
    },
    {
      action: "plugin::documentation.settings.regenerate",
      subject: null
    },
    {
      action: "plugin::documentation.settings.update",
      subject: null
    }
  ],
  open: [
    {
      action: "plugin::documentation.read",
      subject: null
    },
    {
      action: "plugin::documentation.settings.regenerate",
      subject: null
    }
  ],
  regenerate: [
    {
      action: "plugin::documentation.settings.regenerate",
      subject: null
    }
  ],
  update: [
    {
      action: "plugin::documentation.settings.update",
      subject: null
    }
  ]
};
var pluginId = "documentation";
var prefixPluginTranslations = (trad, pluginId2) => {
  return Object.keys(trad).reduce((acc, current) => {
    acc[`${pluginId2}.${current}`] = trad[current];
    return acc;
  }, {});
};
function __variableDynamicImportRuntime2__(path) {
  switch (path) {
    case "./translations/ar.json":
      return import("./ar-Bu09tPI1-7I2IHOK4.js");
    case "./translations/cs.json":
      return import("./cs-tf-UeGst-QFENQIOA.js");
    case "./translations/de.json":
      return import("./de-CMhqnPQP-3FJOHVBB.js");
    case "./translations/dk.json":
      return import("./dk-BmQOOeIc-WOZKYBUP.js");
    case "./translations/en.json":
      return import("./en-Cx8yPuig-BO5ZGPEH.js");
    case "./translations/es.json":
      return import("./es-DAdgO3Ey-W2IBBI3D.js");
    case "./translations/fr.json":
      return import("./fr-B5fjFqKX-NAH2JEML.js");
    case "./translations/id.json":
      return import("./id-CLApXj97-C7NKG6MX.js");
    case "./translations/it.json":
      return import("./it-C7GcWYBa-NKDOIH2T.js");
    case "./translations/ko.json":
      return import("./ko-DZvks90a-UUBF2CAW.js");
    case "./translations/ms.json":
      return import("./ms-Df9gDB9M-Y7L2MLSJ.js");
    case "./translations/nl.json":
      return import("./nl-BlmTMaTL-VPRG3CWN.js");
    case "./translations/pl.json":
      return import("./pl-5iT3b9r4-UHJQTGD2.js");
    case "./translations/pt-BR.json":
      return import("./pt-BR-De5jokla-XBML2VIZ.js");
    case "./translations/pt.json":
      return import("./pt-BK5YbXpM-5PTK2ELJ.js");
    case "./translations/ru.json":
      return import("./ru-C_16WuLP-RBAN64JC.js");
    case "./translations/sk.json":
      return import("./sk-B7RadPe4-QXV4O5VQ.js");
    case "./translations/sv.json":
      return import("./sv-DK5DOsrV-QNUDJBDE.js");
    case "./translations/th.json":
      return import("./th-DNiRgKQH-6P7JUSVJ.js");
    case "./translations/tr.json":
      return import("./tr-CWX4cUiB-VGYVM6UA.js");
    case "./translations/uk.json":
      return import("./uk-BEfALDlr-BV2TUJSQ.js");
    case "./translations/vi.json":
      return import("./vi-geadDLtq-OFMEG5IF.js");
    case "./translations/zh-Hans.json":
      return import("./zh-Hans-fcRf-TLx-46UFWDBU.js");
    case "./translations/zh.json":
      return import("./zh-E4LX--2j-PCZNOHHW.js");
    default:
      return new Promise(function(resolve, reject) {
        (typeof queueMicrotask === "function" ? queueMicrotask : setTimeout)(
          reject.bind(null, new Error("Unknown variable dynamic import: " + path))
        );
      });
  }
}
var index = {
  register(app) {
    app.addMenuLink({
      to: `plugins/${pluginId}`,
      icon: ForwardRef$2x,
      intlLabel: {
        id: `${pluginId}.plugin.name`,
        defaultMessage: "Documentation"
      },
      permissions: PERMISSIONS.main,
      Component: async () => {
        const { App } = await import("./App-RCDQlkkW-FQT5J52N.js");
        return App;
      },
      position: 9
    });
    app.registerPlugin({
      id: pluginId,
      name: pluginId
    });
  },
  bootstrap(app) {
    app.addSettingsLink("global", {
      intlLabel: {
        id: `${pluginId}.plugin.name`,
        defaultMessage: "Documentation"
      },
      id: "documentation",
      to: pluginId,
      Component: async () => {
        const { SettingsPage } = await import("./Settings-BVMaCS19-UBGH63KA.js");
        return SettingsPage;
      },
      permissions: PERMISSIONS.main
    });
  },
  async registerTrads({ locales }) {
    const importedTrads = await Promise.all(locales.map((locale) => {
      return __variableDynamicImportRuntime2__(`./translations/${locale}.json`).then(({ default: data }) => {
        return {
          data: prefixPluginTranslations(data, pluginId),
          locale
        };
      }).catch(() => {
        return {
          data: {},
          locale
        };
      });
    }));
    return Promise.resolve(importedTrads);
  }
};

export {
  PERMISSIONS,
  pluginId,
  index
};
//# sourceMappingURL=chunk-UOOKK7HI.js.map
